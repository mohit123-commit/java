1)check a array is sorted or not : 
boolean -->void 
i=0 i<a.length

public class Main {
    static void printArray(int a[])
    {
        boolean check=true;
        for(int i=0;i<a.length-1;i++)
        {
            if(a[i]>a[i+1])
            {
                check=false;
                break;
            }
        }
        if(check==true)
            System.out.println("true");
        else
            System.out.println("false");
    }
    public static void main(String[] args) {
       int a[]={1,3,4,5,6};
        printArray(a);
    }
}
--------------------------------------------------------------------------------------
public class Main {
    static boolean printArray(int a[])
    {
        boolean check=true;
        for(int i=1;i<a.length;i++)
        {
            if(a[i]<a[i-1])
            {
                check=false;
                break;
            }
        }
        return check;
    }
    public static void main(String[] args) {
       int a[]={1,2,3,4,5};
        System.out.println(printArray(a));
    }
}
-------------------------------------------------------------------------------------------------
2) through two pointer......
         1 0 1 0 1 0
output== 0 0 0 1 1 1

public class Main {
    public static void main(String[] args) {
       int a[]={1,0,1,0,1,0};
      int left=0;
      int right=a.length-1;

      while(left<right)
      {
          if(a[left]>a[right])
          {
              int temp;
              temp=a[left];
              a[left]=a[right];
              a[right]=temp;
          }
          left++;
          right--;
      }

      for(int i=0;i<a.length;i++)
      {
          System.out.println(a[i]);
      }
    }
}
----------------------------------------------------------------------------------------------------
3) how many zeros are present in array..
1 0 1 0 1 0 1 0

public class Main {
    static void printArray(int a[])
    {
        int count=0;
        for(int i=0;i<a.length;i++)
        {
           if(a[i]==0)
           {
               count++;
           }
        }
        System.out.println("count= "+count);
    }
    static void swap(int a[],int left,int right)
    {
        int temp;
        temp=a[left];
        a[left]=a[right];
        a[right]=temp;
    }
    static void sorted(int a[])
    {
        int left=0;
        int right=a.length-1;
        while (left<right)
        {
            if(a[left]>a[right])
            {
                swap(a, left, right);
            }
            left++;
            right--;
        }
    }
    public static void main(String[] args) {
        int a[]={1,0,1,0,1,0,1,0};

        sorted(a);
        printArray(a);
    }
}
---------------------------------------------------------------------------------------------------
3)
Swap number explain with pointers : 

given an array of integer 'a' move all the even integers at the begining of the array followed by all the odd integers the relative order of odd or even integers does not matter return any array that satisfies the conditon.
1 2 3  4 5 
1 3 5 2 4 

public class Main {
    static void printArray(int []a)
    {
        for(int i=0;i<a.length;i++)
        {
            System.out.println(a[i]);
        }
    }
    static void swap(int a[],int i,int j)
    {
        int temp;
        temp=a[i];
        a[i]=a[j];
        a[j]=temp;
    }
    static void sort(int []a)
    {
        for(int i=0;i<a.length;i++)
        {
            for(int j=i+1;j<a.length;j++)
            {
                if(a[i]>a[j])
                {
                   swap(a,i,j);
                }
            }
        }
    }
    static void odd(int []a)
    {
        for(int i=0;i<a.length;i++)
        {
            for(int j=i+1;j<a.length;j++)
            {
                if(a[i]%2==0)
                {
                    swap(a,i,j);
                }
            }
        }
    }
    static void even(int []a)
    {
        for(int i=0;i<a.length;i++)
        {
            for(int j=i+1;j<a.length;j++)
            {
                if(a[i]%2==0)
                {
                    swap(a,i,j);
                }
            }
        }
    }
    public static void main(String[] args) {
        int a[]={1,3,2,4,5};
        sort(a);
        odd(a);
        even(a);
        printArray(a);
    }
}
-------------------------------------------------------------------------------------------------
4)sort an array using easy method

public class Main {
    public static void main(String[] args) {
      int a[]={4,5,2,3,6,7};

      for(int i=0;i<a.length;i++)
      {
          for(int j=i+1;j<a.length;j++)
          {
              if(a[i]>a[j])
              {
                  int temp;
                  temp=a[i];
                  a[i]=a[j];
                  a[j]=temp;
              }
          }
      }
      for(int i=0;i<a.length;i++)
      {
          System.out.println(a[i]);
      }
    }
}

------------------------------------------------------------------------------------------------------
5)
given an array 'a' sorted in non-decrising order, return an array of the squares of each number sorted in non-decresing order . 
explanation :
number sort is must 
2 4  6 7 10 
when a number is negative 
-10 3 -2 6 -8 

{ 4, -2, 2, 3, -6, 1 }; 
sorted array : -6 -2 1 2 3 4 
output : 36 4 1 4 9 16 
desire output :1 4 4 9 16 36 

public class Main {
    static void printArray(int []a)
    {
        for(int i=0;i<a.length;i++)
        {
            System.out.println(a[i]);
        }
    }
    static void sort(int []a)
    {
        for(int i=0;i<a.length;i++)
        {
            for(int j=i+1;j<a.length;j++)
            {
                if(a[i]>a[j])
                {
                    int temp;
                    temp=a[i];
                    a[i]=a[j];
                    a[j]=temp;
                }
            }
        }
    }
    static void square(int []a)
    {
        for(int i=0;i<a.length;i++)
        {
            a[i]=a[i]*a[i];
        }
    }
    public static void main(String[] args) {
        int a[]={4,-2,2,3,-6,1};
        sort(a);
        square(a);
        sort(a);
        printArray(a);
    }
}
