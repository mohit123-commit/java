thread class
 
public class Main extends Thread {
     public void run()
     {
         System.out.println("hello");
     }
     public static void main(String[] args) {
      Main k=new Main();
      k.start();
     }
}
--------------------------------------------------------
runnable interface

 public class Main implements Runnable {
     public void run()
     {
         System.out.println("hello");
     }
     public static void main(String[] args) {
      Main k=new Main();
      Thread k1=new Thread(k);
      k1.start();
     }
}
----------------------------------------------------------
thread class String name

 public class Main  {
     public static void main(String[] args) {
      Thread k1=new Thread("hii");
      String t=k1.getName();
         System.out.println(t);
     }
}
-----------------------------------------------------------
Thread (runnable e,string name)

 public class Main implements Runnable  {
     public void run()
     {
         System.out.println("hello");
     }
     public static void main(String[] args) {
         Main k=new Main();
      Thread k1=new Thread(k,"hii");
      k1.start();
      String t=k1.getName();
         System.out.println(t);
     }
}
------------------------------------------------------------------
thread.sleep

class A extends Thread{
     public void run()
     {
         for(int i=1;i<=5;i++)
         {
             try{
                 Thread.sleep(500);
                 System.out.print(i+" ");
             }
             catch (Exception ex)
             {
                 System.out.println(ex);
             }
         }
     }
 }
 public class Main  {
     public static void main(String[] args) {
     A k=new A();
     A k1=new A();
     k.start();
     k1.start();
     }
}
---------------------------------------------------------------------
public class Main  {
     public static void main(String[] args) {
    try{
        for(int i=1;i<=5;i++)
        {
            Thread.sleep(400);
            System.out.println(i+" ");
        }
    }
    catch (Exception ex)
    {
        System.out.println(ex);
    }
     }
}
=----------------------------------------------------------------------
public class Main  {
     public static void main(String[] args) {
    try{
        for(int i=1;i<=5;i++)
        {
            Thread.sleep(-400);
            System.out.println(i+" ");
        }
    }
    catch (Exception ex)
    {
        System.out.println(ex);
    }
     }
}

output==java.lang.IllegalArgumentException: timeout value is negative
------------------------------------------------------------------------------
 public class Main extends Thread {
     public void run()
     {
         System.out.println("hii");
     }
     public static void main(String[] args) {
         Main k=new Main();
         k.start();
         k.start();
     }
}

output==Exception in thread "main" java.lang.IllegalThreadStateException
----------------------------------------------------------------------------------

