1)linkedlist 

add() 

first elemet pr add 

mid mey insert 

1 2 3 4 5 
insert =>1 
23

insert :2 
78

insert :5
89

public class Main {
    static class Node{
        int data;
        Node next;
        Node(int data)
        {
            this.data=data;
        }
    }
    static class LinkedList{
        Node head=null;
        Node tail=null;

        void insertAtEnd(int val)
        {
            Node temp=new Node(val);
            if(head==null)
            {
                head=temp;
            }
            else
            {
                tail.next=temp;
            }
            tail=temp;
        }
        void insertAtHead(int val)
        {
            Node temp=new Node(val);
            if(head==null)
            {
                head=temp;
            }
            else
            {
                temp.next=head;
                head=temp;
            }
        }
        void insertAt(int index,int val)
        {
            Node t=new Node(val);
            Node temp=head;
            for(int i=1;i<index-1;i++)
            {
                temp=temp.next;
            }
            t.next=temp.next;
            temp.next=t;
        }
        void display()
        {
            Node temp=head;
            while (temp!=null)
            {
                System.out.print(temp.data+" ");
                temp=temp.next;
            }
        }
    }
    public static void main(String[] args) {
        LinkedList ll=new LinkedList();
        ll.insertAtEnd(23);
        ll.insertAtEnd(24);
        ll.insertAtEnd(25);
        ll.insertAtEnd(26);
        ll.display();

        System.out.println();
        ll.insertAtHead(30);
        ll.insertAtHead(31);
        ll.display();

        System.out.println();
        ll.insertAt(4,40);
        ll.insertAt(2,50);
        ll.display();
    }
}
--------------------------------------------------------------------
23 67 89 23 12 

insert element 
-------------------------
count()
--------------------------
length()

------------
size() 

public class Main {
    static class Node{
        int data;
        Node next;
        Node(int data)
        {
            this.data=data;
        }
    }
    static class LinkedList{
        Node head=null;
        Node tail=null;

        void insertAtEnd(int val)
        {
            Node temp=new Node(val);
            if(head==null)
            {
                head=temp;
            }
            else
            {
                tail.next=temp;
            }
            tail=temp;
        }
        void insertAtHead(int val)
        {
            Node temp=new Node(val);
            if(head==null)
            {
                head=temp;
            }
            else
            {
                temp.next=head;
                head=temp;
            }
        }
        void insertAt(int index,int val)
        {
            Node t=new Node(val);
            Node temp=head;
            for(int i=1;i<index-1;i++)
            {
                temp=temp.next;
            }
            t.next=temp.next;
            temp.next=t;
        }
        int size()
        {
            int count=0;
            Node temp=head;
            while(temp!=null)
            {
                count++;
                temp=temp.next;
            }
            return count;
        }
        void display()
        {
            Node temp=head;
            while(temp!=null)
            {
                System.out.print(temp.data+" ");
                temp=temp.next;
            }
        }
    }
    public static void main(String[] args) {
        LinkedList ll=new LinkedList();
        ll.insertAtEnd(23);
        ll.insertAtEnd(67);
        ll.insertAtEnd(89);
        ll.insertAtEnd(23);
        ll.insertAtEnd(12);
        ll.display();

        System.out.println();
        ll.insertAtHead(10);
        ll.insertAtHead(11);
        ll.display();

        System.out.println();
        ll.insertAt(2,40);
        ll.insertAt(3,50);
        ll.display();

        System.out.println();
        System.out.println("size = "+ll.size());
    }
}
-------------------------------------------------------------------------------------------------------------